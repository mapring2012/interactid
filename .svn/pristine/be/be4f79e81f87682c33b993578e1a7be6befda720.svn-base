<?php
session_start ();
require_once 'Zend/Controller/Plugin/Abstract.php';
class IndexController extends Zend_Controller_Action {
	public $getLibBaseUrl;
	private $_registerDb = NULL;
	private $baseUrl = "http://localhost/interactid/";
	public function init() {
		/* Initialize action controller here */
		$this->view->assign ( 'action', 'index' );
		$this->_registerDb = new Application_Model_Register ();
		$this->getLibBaseUrl = new Zend_View_Helper_BaseUrl();
	}
	
	// this is function for login
	public function indexAction() {
		//echo 'http://'.$_SERVER['SERVER_NAME'].$this->getLibBaseUrl->baseUrl();
		

		// MESSAGE ***************************
		if($this->_getParam('success')!='' || $this->_getParam('success')!= null){
			$message = $this->_getParam('success');
			if($message ==1)
			{
				$message = 'Your account has been activated! please login below.';
				$this->view->success = $message;
			}
			if($message ==2)
			{
				$message = 'Your account is already activated! please login below.';
				$this->view->success = $message;
			}			
		}
		// end MESSAGE ************************
				
		// action body
		if ($this->getRequest ()->getPost ( 'BtnSubmit' )) {
			$UserName = "";
			$UserName = $this->getRequest ()->getPost ( 'User_login' );
			$UserPassword = $this->getRequest ()->getPost ( 'User_password' );
			if ($UserName != "" && @$UserPassword != "") {
				$result = $this->_registerDb->loginActionPro ( $UserName, $UserPassword );
				foreach ( $result as $column => $value ) {
					$UserNames = $value ['User_login'];
					$PassWords = $value ['User_password'];
				}
				if (@$UserNames == $UserName) {
					$_SESSION ['UserSession'] = $UserNames;
					$_SESSION ['User_Passwords'] = $PassWords;
					if ($this->getRequest ()->getPost ( 'txtRemember' ) == "autoLogin") {
						setcookie ( "cookname", $_SESSION ['UserSession'], time () + 60, "/" );
						setcookie ( "cookpass", $_SESSION ['User_Passwords'], time () + 60, "/" );
					}
					$lan = $this->_getParam('lang');
					$this->_redirect ($lan.'/index/dashboard' );
                     return ;
				} else {
					//$this->view->Login = '';
					$_SESSION['errorIn']="ErrorIncorrect";
				}
			} else {
				//$this->view->Login = '';
				$_SESSION['errorBlank']="ErrorBlacnk";
			}
		}
	}
	
	// this is function for register user
	
	// sellect users
	public function tableuser() {
		$getTableUser = $this->_registerDb->selectAllUsersName ();
		return $getTableUser;
	}
	// end user
	public function registerAction() {
		$base= "http://".$_SERVER["SERVER_NAME"].$this->getLibBaseUrl->baseUrl();
		if ($this->getRequest ()->getPost ( 'btnSave' )) {
			foreach ( $this->tableuser () as $reRows ) {
				$UserNames = $reRows ['User_login'];
				$userEmail = $reRows ['User_Mail'];
				
				if ($UserNames == $this->getRequest ()->getPost ( 'txtusername' ) ) {
					$_SESSION ['duplicateUserName'] = "<p style='color:red;'>UserName can not duplicated</p>";
					$lan = $this->_getParam('lang');
					$this->_redirect ( $lan.'/index/register' );
					exit();
				}
				else if ($userEmail == $this->getRequest ()->getPost ( 'txtemail' ) ) {
					$_SESSION ['duplicateUserEmail'] = "<p style='color:red;'>UserEmail can not duplicated</p>";
					$lan = $this->_getParam('lang');
					$this->_redirect ( $lan.'/index/register' );
					exit();
				}
			}
			$dataAdd = array ();
			$GetPost = $this->getRequest ();
			require_once 'Zend/ResizeClassImage.php';
			$fname = isset($_FILES ['fileupload'] ['name'])?$_FILES ['fileupload']['name']:'';
			$fsize = $_FILES ['fileupload'] ['size'];
			$ftmp = $_FILES ['fileupload'] ['tmp_name'];
			$ftype = $_FILES ['fileupload'] ['type'];
			$getCodGeneration= self::RandomActiveMail();
			$image = new ResizeClassImage ();
			$baseUpload = $this->basePathUpload ();
				if($fname=='' || $fname==false){
					$dataOrganism = array (
							'Org_RaisonSocial' => $GetPost->getPost ( 'txtcompanyname' ),
							'Org_Siret' => $GetPost->getPost ( 'txtsiret' ),
							'Org_Adresse1' => $GetPost->getPost ( 'txtadress' ),
							'Org_ZipCode' => $GetPost->getPost ( 'txtzipcode' ),
							'Org_City' => $GetPost->getPost ( 'txtcity' ),
							'Org_Country' => $GetPost->getPost ( 'txtcountry' ),
							'Org_Telephone' => $GetPost->getPost ( 'txtcompanytelephone' ),
							'Org_Fax' => $GetPost->getPost ( 'txtfax' ),
							'Org_Website' => $GetPost->getPost ( 'txtsite' ),
							'Org_activity' => $GetPost->getPost ( 'txtcompanyactivity' ),
							'Org_codeAPE' => $GetPost->getPost ( 'txtcodeape' ),
							'Org_capitalsocail' => $GetPost->getPost ( 'txtcapitalsocail' ),
							'Org_staff' => $GetPost->getPost ( 'txtstaff' ),
							'Org_TVA' => $GetPost->getPost ( 'txttva' ),
							'Org_Logo' => ''
					);
					$LastID = $this->_registerDb->addOrganism ( $dataOrganism );
					$dataAdd = array (
							'User_login' => $GetPost->getPost ( 'txtusername' ),
							'User_password' => $GetPost->getPost ( 'txtpassword' ),
							'User_Lastname' => $GetPost->getPost ( 'txtlastname' ),
							'User_Firstname' => $GetPost->getPost ( 'txtfirstname' ),
							'User_Mobilephone' => $GetPost->getPost ( 'txtmobilephone' ),
							'User_Officephone' => $GetPost->getPost ( 'txttelephone' ),
							'User_Mail' => $GetPost->getPost ( 'txtemail' ),
							'User_Position' => $GetPost->getPost ( 'txtposition' ),
							'User_profile' => $GetPost->getPost ( 'txtprofil' ),
							'User_title' => $GetPost->getPost ( 'txttitle' ),
							'Org_Id' => $LastID,
							'activated'=>$getCodGeneration
					);
				$this->_registerDb->addRegister ($dataAdd );
			
			}else{
			$check_type = $image->checkType ( $ftype ); // check file type
			$check_size = $image->checkSize ( $fsize ); // check file size
			if (true == $check_type) {
				if (true == $check_size) {
					$image->load ( $ftmp );
					$image->resize ( 500, 500 );
					// resize to width = 500px and height =500p
					if (file_exists ( $baseUpload . '/' . $fname )) {
						$fname = $image->random ( 5 ) . '-' . $fname;
						$image->save ( $baseUpload . '/' . $fname ); // =
						                                             // move_upload_file()
						                                             // create
						                                             // thumbnail
						$image->resize ( 70, 70 );
						$image->save ( $baseUpload . '/thumb/' . $fname );
					} else {
						$image->save ( $baseUpload . '/' . $fname ); // =
						                                             // move_upload_file()
						                                             // create
						                                             // thumbnail
						$image->resize ( 70, 70 );
						$image->save ( $baseUpload . '/thumb/' . $fname );
					}
					$dataOrganism = array (
							'Org_RaisonSocial' => $GetPost->getPost ( 'txtcompanyname' ),
							'Org_Siret' => $GetPost->getPost ( 'txtsiret' ),
							'Org_Adresse1' => $GetPost->getPost ( 'txtadress' ),
							'Org_ZipCode' => $GetPost->getPost ( 'txtzipcode' ),
							'Org_City' => $GetPost->getPost ( 'txtcity' ),
							'Org_Country' => $GetPost->getPost ( 'txtcountry' ),
							'Org_Telephone' => $GetPost->getPost ( 'txtcompanytelephone' ),
							'Org_Fax' => $GetPost->getPost ( 'txtfax' ),
							'Org_Website' => $GetPost->getPost ( 'txtsite' ),
							'Org_activity' => $GetPost->getPost ( 'txtcompanyactivity' ),
							'Org_codeAPE' => $GetPost->getPost ( 'txtcodeape' ),
							'Org_capitalsocail' => $GetPost->getPost ( 'txtcapitalsocail' ),
							'Org_staff' => $GetPost->getPost ( 'txtstaff' ),
							'Org_TVA' => $GetPost->getPost ( 'txttva' ),
							'Org_Logo' => $fname 
					);
					$LastID = $this->_registerDb->addOrganism ( $dataOrganism );
					$dataAdd = array (
							'User_login' => $GetPost->getPost ( 'txtusername' ),
							'User_password' => $GetPost->getPost ( 'txtpassword' ),
							'User_Lastname' => $GetPost->getPost ( 'txtlastname' ),
							'User_Firstname' => $GetPost->getPost ( 'txtfirstname' ),
							'User_Mobilephone' => $GetPost->getPost ( 'txtmobilephone' ),
							'User_Officephone' => $GetPost->getPost ( 'txttelephone' ),
							'User_Mail' => $GetPost->getPost ( 'txtemail' ),
							'User_Position' => $GetPost->getPost ( 'txtposition' ),
							'User_profile' => $GetPost->getPost ( 'txtprofil' ),
							'User_title' => $GetPost->getPost ( 'txttitle' ),
							'Org_Id' => $LastID,
							'activated'=>$getCodGeneration
					);
				$this->_registerDb->addRegister ($dataAdd );
				}
			}//check_type
		}
			$lan = $this->_getParam('lang');
			
			//to confirm email
			$name = $GetPost->getPost ( 'txtfirstname' ).$GetPost->getPost ( 'txtlastname' );
			$recipient = $GetPost->getPost ( 'txtemail' );
			$subject = "Hello ".$name;
			$headers  = 'MIME-Version: 1.0' . "\r\n";
			$headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n";
			$headers .= 'From: Interactid active your account <sales@khm.co>' . "\r\n";
			//begin of HTML message			
			$usermailer = $GetPost->getPost ('txtemail');
			$message = '<html>
<head>
  <title>Interactid: Active your account!</title>
</head>
<body>
					<div style="border-radius:5px;border:solid 1px #dfdfdf;font-family:Arial;word-wrap:break-word;width:670px">
<table cellspacing="0" cellpadding="0" style="background-color:#ededed;border-radius:5px 5px 0 0;width:670px">
	<tbody>
	<tr>
		<td><div style="padding:30px 30px 0;font-size:20px">ACTIVE YOUR ACCOUNT NOW!
        <div style="margin-top:20px;width:0;min-height:0;border-bottom:10px solid #fff;border-left:10px solid transparent;border-right:10px solid transparent"></div></div>
		</td>
		<td style="vertical-align:middle;text-align:right;padding-right:30px">
		<img src="'.$base.'/images/logo1.png"/></td>
	</tr>
	</tbody>
</table>
<div style="line-height:18px;font-size:14px">
<div style="padding:30px 30px 40px">Click on this link to activate your account: <a href="'.$base.'/'.$lan.'/index/confirm?email='.$usermailer.'&activated='.$getCodGeneration.'">Active Now!</a></div></div>
<div style="line-height:18px;border-radius:0 0 5px 5px;font-size:14px;padding:30px;border-top:solid 1px #dfdfdf"><p><strong>Interactid</strong><br><br> 110 avenue Marceau 92 400 COURBEVOIE FRANCE.<br> Email:&nbsp;contact@interactid.com<br> Tel : 01.46.43.11.08</p></div></div>
</body>
</html>';
			mail($recipient, $subject, $message, $headers);
			//end to confirm email
			
			$this->_redirect ( $lan.'/index/register' );
		}
	}
	
	/*function add to table*/
	public function addToTable(){
		
		
	}
	/*this is function for generating active account register*/
	
	static  function RandomActiveMail($length = 50){
		
			$characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
			$randomString = '';
			for ($i = 0; $i < $length; $i++) {
				$randomString .= $characters[rand(0, strlen($characters) - 1)];
			}
			return $randomString;
		
		
	}
	// this is function for open new dashboard
	public function dashboardAction() {
		// this is body of function
		if (! $this->checkSession ()) {
			$lan = $this->_getParam('lang');
			$this->_redirect ($lan.'/index' );
			exit ();
		} else {
			$UserNameget = $_SESSION ['UserSession'];
			$getResultProfile = $this->_registerDb->selectProfile ( $UserNameget );
			$this->view->getResultProfile = $getResultProfile;
			$this->view->baseImage = $this->basePathUpload ();
		}
	}
	
	// this is function for logout
	public function logoutAction() {
		$SessionName = $_SESSION ['UserSession'];
		if ($this->checkSession ()) {
			unset ($SessionName );
			session_destroy ();
			$lan = $this->_getParam('lang');
			$this->_redirect ( $lan.'/index/index' );
			exit ();
		}
	}
	
	// this is function for check session
	private function checkSession() {
		$SessionName = $_SESSION ['UserSession'];
		if (isset ( $SessionName )) {
			return $SessionName;
		}
	}
	
	// this is function for get basepath upload images
	public function basePathUpload() {
		$pathupload = realpath ( APPLICATION_PATH . '/../public/data/uploads' );
		return $pathupload;
	}
	
	public function confirmAction()
	{	
		//for check
		$GetMail = $this->_getParam('email');
		$GetActive = $this->_getParam('activated');
		$lan = $this->_getParam('lang');
		$getTableUse = $this->_registerDb->selectUsersCheck ($GetMail);
		foreach ( $getTableUse as $reRow )
		{
			$User_Statut = $reRow['User_Statut'];
			if($User_Statut ==0)
			{
				$getTableUser = $this->_registerDb->selectUsersConfirm ();
				foreach ( $getTableUser as $reRows )
				{
					$User_Mail = $reRows ['User_Mail'];
					$activated = $reRows ['activated'];
						
						
					if($User_Mail == $GetMail && $activated == $GetActive )
					{
						$udate = $this->_registerDb->update(1,$GetActive);
						$this->_redirect ( $lan.'/index/index?success=1' );
					}
				}
			}else {
				$this->_redirect ( $lan.'/index/index?success=2' );
			}
		}	
	}	
}

